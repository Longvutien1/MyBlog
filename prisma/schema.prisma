generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int              @id @default(autoincrement())
  name         String?
  email        String           @unique
  password     String
  profileViews Int              @default(0)
  role         Role             @default(USER)
  city         String?
  country      String?
  createdAt    DateTime?        @default(now()) @map("created_at")
  updatedAt    DateTime?        @updatedAt @map("updated_at")
  comments     Comment[]
  profile      ExtendedProfile?
  posts        Post[]
}

model ExtendedProfile {
  id     Int     @id @default(autoincrement())
  userId Int?    @unique
  bio    String?
  User   User?   @relation(fields: [userId], references: [id])
}

model Post {
  id           Int       @id @default(autoincrement())
  title        String
  content      String
  categoryPost String
  published    Boolean   @default(true)
  userId       Int
  views        Int       @default(0)
  likes        Int       @default(0)
  isLike       String[]  @default([])
  createdAt    DateTime? @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")
  user         User      @relation(fields: [userId], references: [id])
  comments     Comment[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  userId    Int
  idPost    Int
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  post      Post      @relation(fields: [idPost], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}
