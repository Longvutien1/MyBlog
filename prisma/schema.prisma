// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int              @id @default(autoincrement())
  name         String?
  email        String           @unique
  password     String
  profileViews Int              @default(0)
  role         Role             @default(USER)
  // coinflips    Boolean[]        
  posts        Post[]
  city         String?
  country      String?
  profile      ExtendedProfile?

  createdAt DateTime? @default(now()) @map(name: "created_at")
  updatedAt DateTime? @updatedAt @map(name: "updated_at")
  comments   Comment[]
}

model ExtendedProfile {
  id     Int     @id @default(autoincrement())
  userId Int?    @unique
  bio    String?
  User   User?   @relation(fields: [userId], references: [id])
}

model Post {
  id           Int       @id @default(autoincrement())
  title        String
  categoryPost String
  published    Boolean   @default(true)
  user         User      @relation(fields: [userId], references: [id])
  userId       Int
  comments     Comment[]
  views        Int       @default(0)
  likes        Int       @default(0)
  isLike       String[]  @default([])
  createdAt    DateTime? @default(now()) @map(name: "created_at")
  updatedAt    DateTime? @updatedAt @map(name: "updated_at")
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String 
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  post    Post   @relation(fields: [idPost], references: [id])
  idPost  Int

  createdAt DateTime? @default(now()) @map(name: "created_at")
  updatedAt DateTime? @updatedAt @map(name: "updated_at")
}

enum Role {
  USER
  ADMIN
}
